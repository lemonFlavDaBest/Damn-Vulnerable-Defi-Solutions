pragma solidity ^0.8.0;

import "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol";
import "./SimpleGovernance.sol";
import "./SelfiePool.sol";

/// I think we need to call it and later execute it in two different flashloans

contract SelfiePoolExploiter is IERC3156FlashBorrower {

    ERC20Snapshot public immutable token;
    SimpleGovernance public immutable governance;

    constructor(address _token, address _governance) {
        token = ERC20Snapshot(_token);
        governance = SimpleGovernance(_governance);
    }
    
    function onFlashLoan(
        address initiator,
        address token,
        uint256 amount,
        uint256 fee,
        bytes calldata data
    ) external returns (bytes32) {
        
    }

}